**Manual Angular**
comando instalar:npm install -g @angular/cli

primero revisar la versión:

ng version
**si no aparece nada entonces procedemos con el siguiente comando:**

**instalar de manera global angular**
nota: cuando se instala de manera global solo se hace una vez.
npm install -g @angular/cli

**para crear un proyecto en angular vamos
a ejecutar el siguiente comando**

ng new primerProyectoAngular

**ahora debemos ingresar al proyecto**

cd my-first-project

**ahora la prueba de fuego, ejecutar el proyecto**
**nota: con el comando ng serve o ng serve -o corremos el proyecto**
**nota: con control + c detenemos el proyecto, es necesario
que se encuentre detenido para instalar complementos**
ng serve

**ojo no abrir con open live serve, abrir con la url**
url del proyecto: http://localhost:4200/


revisar el componente app, recordemos que ahi estan
los archivos principales del proyecto,
vamos a limpiar el app.component.html.
**nota: no abrir con open live serve, abrir con la url que entrega angular**

**instalar bootstrap**
**ojo: importar los estilos dentro de las primeras lineas**
primero correr el siguiente comando
npm install bootstrap
segundo vamos a importar la ruta en angular.json,
ubicamos la linea de los estilos y scripts
y pegamos lo siguiente:
css:
"node_modules/bootstrap/dist/css/bootstrap.min.css"

js:
"node_modules/bootstrap/dist/js/bootstrap.bundle.min.js"

**solución cuando no cargan los estilo de bootstrap**

npm install bootstrap --save
**esto se importa en el archivo css que esta fuera del app**
@import "~bootstrap/dist/css/bootstrap.css";

**iconos**
npm i bootstrap-icons
"node_modules/bootstrap-icons/font/bootstrap-icons.css"



**nota:la etiquete router-outlet siempre debe ir en el
app component**

<router-outlet></router-outlet>

**crear componentes**

comando:
**nota:--skip-tests=true sirve para eliminar el archivo spec**
ng g c componente/barra --skip-tests=true

ng g c componente/formulario1 --skip-tests=true

ng g c componente/carrusel --skip-tests=true

ng g c componente/cards --skip-tests=true

ng g c componente/footer --skip-tests=true

ng g c componente/xbox --skip-tests=true
ng g c componente/ps5 --skip-tests=true
 

ng g c componente/carrusel
ng g c componente/footer
ng generate component componente/barra


**llamar componentes**
<app-barra></app-barra>


**crear rutas**
{path:'cards',component:CardsComponent}

**build a un proyecto**
ng build

**despliegue**
ng add angular-cli-ghpages
https://alvarozi89.github.io/pruebaAngular/

ng deploy --base-href=https://alvarozi89.github.io/pruebaAngular/
**Alertas**
import swal from'sweetalert2';


**servicios**
ng generate service nombre-componente --module=app
ng g s servicios/api --skip-tests=true



**Despliegue**

Front: 

https://dev.to/gedgonz/haciendo-deploy-de-una-app-en-angular-a-heroku-16ji
instalar express

"scripts": {
    "ng": "ng",
    "start": "node server.js",
    "build": "ng build",
    "watch": "ng build --watch --configuration development",
    "test": "ng test",

    "heroku-postbuild": "ng build --prod"
  },
luego crear un archivo llamado server.js:

const path = require('path');
const express = require('express');
const app = express();

// Serve static files
app.use(express.static(__dirname + '/dist/front-jefes'));

// Send all requests to index.html
app.get('/*', function(req, res) {
  res.sendFile(path.join(__dirname + '/dist/front-jefes/index.html'));
});

// default Heroku port
app.listen(process.env.PORT || 5000);


backend:

solo agregar en el script:

  "start": "node src/index.js"